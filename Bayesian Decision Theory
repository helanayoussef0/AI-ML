{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Lab  #1\n",
        "\n",
        "First and Last Name: Helana Youssef\n",
        "\n",
        "Student ID: 500766171\n"
      ],
      "metadata": {
        "id": "uaanFxysMcx_"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 35,
      "metadata": {
        "id": "rcQnjqZmMcbK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "a5392542-7321-4c3f-a73b-53501a98eb90"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Midterm mark  Final mark\n",
              "0           32.5        31.7\n",
              "1           53.4        68.8\n",
              "2           61.5        62.6\n",
              "3           47.5        71.5\n",
              "4           59.8        87.2\n",
              "..           ...         ...\n",
              "95          50.0        81.5\n",
              "96          49.2        72.1\n",
              "97          50.0        85.2\n",
              "98          48.1        66.2\n",
              "99          25.1        53.5\n",
              "\n",
              "[100 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7f9079fd-7b24-41d0-b571-a5fec6b2e5de\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Midterm mark</th>\n",
              "      <th>Final mark</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>32.5</td>\n",
              "      <td>31.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>53.4</td>\n",
              "      <td>68.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>61.5</td>\n",
              "      <td>62.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>47.5</td>\n",
              "      <td>71.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>59.8</td>\n",
              "      <td>87.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>50.0</td>\n",
              "      <td>81.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>49.2</td>\n",
              "      <td>72.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>50.0</td>\n",
              "      <td>85.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>48.1</td>\n",
              "      <td>66.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>25.1</td>\n",
              "      <td>53.5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows Ã— 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7f9079fd-7b24-41d0-b571-a5fec6b2e5de')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7f9079fd-7b24-41d0-b571-a5fec6b2e5de button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7f9079fd-7b24-41d0-b571-a5fec6b2e5de');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ],
      "source": [
        "#Just to get me started\n",
        "#The dataset saved on my computer as an excel, but I saved it as csv \n",
        "#(hopefully that doesn't affect it when it runs on your computer)\n",
        "#I numbered the questions in order, since they weren't numbered, that's the format for this submission\n",
        "import matplotlib\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "data = pd.read_csv(\"student_marks.csv\")\n",
        "data\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 1"
      ],
      "metadata": {
        "id": "E2i9AY5C7auv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "def standardize(data):\n",
        "    mean = np.mean(data, axis=0)\n",
        "    std = np.std(data, axis=0)\n",
        "    standardized_data = (data - mean) / std\n",
        "    return standardized_data, mean, std\n",
        "    \n",
        "\n",
        "def cost_function(m, b, x, y):\n",
        "    N = len(y)\n",
        "    y_pred = m * x + b\n",
        "    cost = 1 / (2 * N) * np.sum((y_pred - y)**2)\n",
        "    return cost\n",
        "\n",
        "def gradient_partial_derivatives(m, b, x, y):\n",
        "    N = len(y)\n",
        "    y_pred = m * x + b\n",
        "    dm = 1 / N * np.sum((y_pred - y) * x)\n",
        "    db = 1 / N * np.sum(y_pred - y)\n",
        "    return dm, db\n",
        "\n",
        "def update_m_b(m, b, x, y, learning_rate):\n",
        "    dm, db = gradient_partial_derivatives(m, b, x, y)\n",
        "    m = m - learning_rate * dm\n",
        "    b = b - learning_rate * db\n",
        "    return m, b\n",
        "\n",
        "def load_data(student_marks):\n",
        "    data = pd.read_csv(student_marks.csv)\n",
        "    x = data.iloc[:, 0].values\n",
        "    y = data.iloc[:, 1].values\n",
        "    x, x_mean, x_std = standardize(x.reshape(-1, 1))\n",
        "    return x, y, x_mean, x_std"
      ],
      "metadata": {
        "id": "90PXuGyk9qht"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 2"
      ],
      "metadata": {
        "id": "JFU_52yu-CMH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "m = -0.5\n",
        "b = 0\n",
        "learning_rate = 0.0001"
      ],
      "metadata": {
        "id": "wE3sRaii-B0t"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 3"
      ],
      "metadata": {
        "id": "KmNNdqtP_Q6c"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "\n",
        "data = pd.read_csv(\"student_marks.csv\")\n",
        "x = data.iloc[:, 0].values\n",
        "y = data.iloc[:, 1].values\n",
        "x_mean = np.mean(x)\n",
        "x_std = np.std(x)\n",
        "x = (x - x_mean) / x_std\n",
        "\n",
        "plt.scatter(x * x_std + x_mean, y)\n",
        "plt.xlabel(\"Midterm Mark\")\n",
        "plt.ylabel(\"Final Mark\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "Uv5yFg-q_PHz",
        "outputId": "f6343b69-4816-40cd-bc69-56c36b0847b3"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 4"
      ],
      "metadata": {
        "id": "LlZDqVRdCvib"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "\n",
        "data = pd.read_csv(\"student_marks.csv\")\n",
        "x = data.iloc[:, 0].values\n",
        "y = data.iloc[:, 1].values\n",
        "x_mean = np.mean(x)\n",
        "x_std = np.std(x)\n",
        "x = (x - x_mean) / x_std\n",
        "\n",
        "plt.scatter(x * x_std + x_mean, y)\n",
        "plt.xlabel(\"Midterm Mark\")\n",
        "plt.ylabel(\"Final Mark\")\n",
        "\n",
        "m = -0.5\n",
        "b = 0\n",
        "x_line = np.linspace(x.min(), x.max(), 2)\n",
        "y_line = m * x_line + b\n",
        "plt.plot(x_line * x_std + x_mean, y_line, '-r')\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "6aYIXLeVCr5v",
        "outputId": "bd6d68f3-6e2e-442f-f29f-ae385f6959b7"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Without Standarzation "
      ],
      "metadata": {
        "id": "OPW6gjtkICa6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "\n",
        "data = pd.read_csv(\"student_marks.csv\")\n",
        "x = data.iloc[:, 0].values\n",
        "y = data.iloc[:, 1].values\n",
        "\n",
        "plt.scatter(x, y)\n",
        "plt.xlabel(\"Midterm Mark\")\n",
        "plt.ylabel(\"Final Mark\")\n",
        "\n",
        "m = -0.5\n",
        "b = 0\n",
        "x_line = np.linspace(x.min(), x.max(), 2)\n",
        "y_line = m * x_line + b\n",
        "plt.plot(x_line, y_line, '-r')\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "sQB1Q1STICHI",
        "outputId": "bc9aa2c7-4041-48c8-ecf9-5f10db885ea4"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 5"
      ],
      "metadata": {
        "id": "RwEwVv4iDj1M"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "\n",
        "data = pd.read_csv(\"student_marks.csv\")\n",
        "x = data.iloc[:, 0].values\n",
        "y = data.iloc[:, 1].values\n",
        "x_mean = np.mean(x)\n",
        "x_std = np.std(x)\n",
        "x = (x - x_mean) / x_std\n",
        "\n",
        "plt.scatter(x * x_std + x_mean, y)\n",
        "plt.xlabel(\"Midterm Mark\")\n",
        "plt.ylabel(\"Final Mark\")\n",
        "\n",
        "m = -0.5\n",
        "b = 0\n",
        "learning_rate = 0.0001\n",
        "for i in range(100):\n",
        "    y_pred = m * x + b\n",
        "    cost = (1 / (2 * len(y))) * np.sum((y_pred - y) ** 2)\n",
        "    db = (1 / len(y)) * np.sum(y_pred - y)\n",
        "    dm = (1 / len(y)) * np.sum((y_pred - y) * x)\n",
        "    b = b - learning_rate * db\n",
        "    m = m - learning_rate * dm\n",
        "\n",
        "x_line = np.linspace(x.min(), x.max(), 2)\n",
        "y_line = m * x_line + b\n",
        "plt.plot(x_line * x_std + x_mean, y_line, '-r')\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "IGLUGdRzDmLk",
        "outputId": "077ff53c-da8f-4f01-eeab-634ed3b65d79"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Without Standarztion"
      ],
      "metadata": {
        "id": "Y6PskZuyG89g"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "\n",
        "data = pd.read_csv(\"student_marks.csv\")\n",
        "x = data.iloc[:, 0].values\n",
        "y = data.iloc[:, 1].values\n",
        "\n",
        "plt.scatter(x, y)\n",
        "plt.xlabel(\"Midterm Mark\")\n",
        "plt.ylabel(\"Final Mark\")\n",
        "\n",
        "m = -0.5\n",
        "b = 0\n",
        "learning_rate = 0.0001\n",
        "for i in range(100):\n",
        "    y_pred = m * x + b\n",
        "    cost = (1 / (2 * len(y))) * np.sum((y_pred - y) ** 2)\n",
        "    db = (1 / len(y)) * np.sum(y_pred - y)\n",
        "    dm = (1 / len(y)) * np.sum((y_pred - y) * x)\n",
        "    b = b - learning_rate * db\n",
        "    m = m - learning_rate * dm\n",
        "\n",
        "x_line = np.linspace(x.min(), x.max(), 2)\n",
        "y_line = m * x_line + b\n",
        "plt.plot(x_line, y_line, '-r')\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "mGHoenwRHm5y",
        "outputId": "7442b8e7-7f39-4688-d85d-03dea7445a45"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 6 : Error"
      ],
      "metadata": {
        "id": "3xGa550-EEMQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "\n",
        "data = pd.read_csv(\"student_marks.csv\")\n",
        "x = data.iloc[:, 0].values\n",
        "y = data.iloc[:, 1].values\n",
        "x_mean = np.mean(x)\n",
        "x_std = np.std(x)\n",
        "x = (x - x_mean) / x_std\n",
        "\n",
        "m = -0.5\n",
        "b = 0\n",
        "learning_rate = 0.0001\n",
        "errors = []\n",
        "for i in range(100):\n",
        "    y_pred = m * x + b\n",
        "    cost = (1 / (2 * len(y))) * np.sum((y_pred - y) ** 2)\n",
        "    errors.append(cost)\n",
        "    db = (1 / len(y)) * np.sum(y_pred - y)\n",
        "    dm = (1 / len(y)) * np.sum((y_pred - y) * x)\n",
        "    b = b - learning_rate * db\n",
        "    m = m - learning_rate * dm\n",
        "\n",
        "plt.plot(range(100), errors, '-r')\n",
        "plt.xlabel(\"Iteration\")\n",
        "plt.ylabel(\"Error\")\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "Z-gKJ1UREGFN",
        "outputId": "b1e9170a-7eb1-4ee9-8062-ca091ce27550"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 7"
      ],
      "metadata": {
        "id": "Wflq7irrEPGU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "\n",
        "data = pd.read_csv(\"student_marks.csv\")\n",
        "x = data.iloc[:, 0].values\n",
        "y = data.iloc[:, 1].values\n",
        "x_mean = np.mean(x)\n",
        "x_std = np.std(x)\n",
        "x = (x - x_mean) / x_std\n",
        "\n",
        "m = -0.5\n",
        "b = 0\n",
        "learning_rate = 0.0001\n",
        "for i in range(2000):\n",
        "    y_pred = m * x + b\n",
        "    db = (1 / len(y)) * np.sum(y_pred - y)\n",
        "    dm = (1 / len(y)) * np.sum((y_pred - y) * x)\n",
        "    b = b - learning_rate * db\n",
        "    m = m - learning_rate * dm\n",
        "\n",
        "plt.scatter(x, y)\n",
        "plt.plot(x, m * x + b, '-r')\n",
        "plt.xlabel(\"Midterm Mark\")\n",
        "plt.ylabel(\"Final Mark\")\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "ModJX7FCERbS",
        "outputId": "42f81afe-9b61-42c2-b2da-ff1dd0e7e12b"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 8"
      ],
      "metadata": {
        "id": "YrcLIteQFDW3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "\n",
        "data = pd.read_csv(\"student_marks.csv\")\n",
        "x = data.iloc[:, 0].values\n",
        "y = data.iloc[:, 1].values\n",
        "x_mean = np.mean(x)\n",
        "x_std = np.std(x)\n",
        "x = (x - x_mean) / x_std\n",
        "\n",
        "m = -0.5\n",
        "b = 0\n",
        "learning_rate = 0.0001\n",
        "errors = []\n",
        "for i in range(2000):\n",
        "    y_pred = m * x + b\n",
        "    cost = (1 / (2 * len(y))) * np.sum((y_pred - y) ** 2)\n",
        "    errors.append(cost)\n",
        "    db = (1 / len(y)) * np.sum(y_pred - y)\n",
        "    dm = (1 / len(y)) * np.sum((y_pred - y) * x)\n",
        "    b = b - learning_rate * db\n",
        "    m = m - learning_rate * dm\n",
        "\n",
        "plt.plot(range(2000), errors, '-r')\n",
        "plt.xlabel(\"Iteration\")\n",
        "plt.ylabel(\"Error\")\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "N4Ew5ZKCFFTO",
        "outputId": "b33ec744-d8ed-4701-b30f-510ba71a9912"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 9: With Standardization "
      ],
      "metadata": {
        "id": "poxfccVqF_Eh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "data = pd.read_csv(\"student_marks.csv\")\n",
        "x = data.iloc[:, 0].values\n",
        "y = data.iloc[:, 1].values\n",
        "x_mean = np.mean(x)\n",
        "x_std = np.std(x)\n",
        "x = (x - x_mean) / x_std\n",
        "\n",
        "m = -0.5\n",
        "b = 0\n",
        "learning_rate = 0.0001\n",
        "errors = []\n",
        "for i in range(2000):\n",
        "    y_pred = m * x + b\n",
        "    cost = (1 / (2 * len(y))) * np.sum((y_pred - y) ** 2)\n",
        "    errors.append(cost)\n",
        "    db = (1 / len(y)) * np.sum(y_pred - y)\n",
        "    dm = (1 / len(y)) * np.sum((y_pred - y) * x)\n",
        "    b = b - learning_rate * db\n",
        "    m = m - learning_rate * dm\n",
        "\n",
        "plt.scatter(x, y)\n",
        "plt.plot(x, m * x + b, '-r')\n",
        "plt.xlabel(\"Midterm Mark (Standardized)\")\n",
        "plt.ylabel(\"Final Mark\")\n",
        "\n",
        "plt.show()\n",
        "\n",
        "plt.plot(range(2000), errors, '-r')\n",
        "plt.xlabel(\"Iteration\")\n",
        "plt.ylabel(\"Error\")\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 541
        },
        "id": "qHYfH36oGHro",
        "outputId": "1bab9337-edd5-48a6-94c1-e7e0b23e9e58"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 9: Without Standarzation"
      ],
      "metadata": {
        "id": "EuXgUG9wGKs8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "\n",
        "data = pd.read_csv(\"student_marks.csv\")\n",
        "x = data.iloc[:, 0].values\n",
        "y = data.iloc[:, 1].values\n",
        "\n",
        "m = -0.5\n",
        "b = 0\n",
        "learning_rate = 0.0001\n",
        "errors = []\n",
        "for i in range(2000):\n",
        "    y_pred = m * x + b\n",
        "    cost = (1 / (2 * len(y))) * np.sum((y_pred - y) ** 2)\n",
        "    errors.append(cost)\n",
        "    db = (1 / len(y)) * np.sum(y_pred - y)\n",
        "    dm = (1 / len(y)) * np.sum((y_pred - y) * x)\n",
        "    b = b - learning_rate * db\n",
        "    m = m - learning_rate * dm\n",
        "\n",
        "plt.scatter(x, y)\n",
        "plt.plot(x, m * x + b, '-r')\n",
        "plt.xlabel(\"Midterm Mark\")\n",
        "plt.ylabel(\"Final Mark\")\n",
        "\n",
        "plt.show()\n",
        "\n",
        "plt.plot(range(2000), errors, '-r')\n",
        "plt.xlabel(\"Iteration\")\n",
        "plt.ylabel(\"Error\")\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 541
        },
        "id": "UtnGKfigGOF9",
        "outputId": "360fcb96-ba3a-4a78-e807-765a05c1da66"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}
