{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Lab  #2\n",
        "\n",
        "First and Last Name: Helana Youssef\n",
        "\n",
        "Student ID: 500766171\n"
      ],
      "metadata": {
        "id": "uaanFxysMcx_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 1"
      ],
      "metadata": {
        "id": "V6OU12S8g9Pt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "\n",
        "# Load the data\n",
        "url = \"https://raw.githubusercontent.com/tofighi/MachineLearning/master/datasets/heart.csv\"\n",
        "heart_data = pd.read_csv(url)\n",
        "\n",
        "# View the first few rows of the data\n",
        "print(heart_data.head())\n",
        "\n",
        "# View the summary statistics of the data\n",
        "print(heart_data.describe())\n",
        "\n",
        "# View the percentage of each class (0 and 1) in the 'chd' column\n",
        "print(heart_data['chd'].value_counts(normalize=True) * 100)\n",
        "\n",
        "# Count the number of missing values in each column\n",
        "print(heart_data.isnull().sum())\n",
        "\n",
        "# Identify the categorical variables in the data\n",
        "categorical_vars = ['famhist']\n",
        "\n",
        "# Plot the correlation matrix\n",
        "corr_matrix = heart_data.corr()\n",
        "sns.heatmap(corr_matrix, cmap='coolwarm', annot=True)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "jpg6Cdfrg77_",
        "outputId": "3ea8faff-f731-4c0c-8874-ead52b4803ef"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   row.names  sbp  tobacco   ldl  adiposity  famhist  typea  obesity  alcohol  \\\n",
            "0          1  160    12.00  5.73      23.11  Present     49    25.30    97.20   \n",
            "1          2  144     0.01  4.41      28.61   Absent     55    28.87     2.06   \n",
            "2          3  118     0.08  3.48      32.28  Present     52    29.14     3.81   \n",
            "3          4  170     7.50  6.41      38.03  Present     51    31.99    24.26   \n",
            "4          5  134    13.60  3.50      27.78  Present     60    25.99    57.34   \n",
            "\n",
            "   age  chd  \n",
            "0   52    1  \n",
            "1   63    1  \n",
            "2   46    0  \n",
            "3   58    1  \n",
            "4   49    1  \n",
            "        row.names         sbp     tobacco         ldl   adiposity       typea  \\\n",
            "count  462.000000  462.000000  462.000000  462.000000  462.000000  462.000000   \n",
            "mean   231.935065  138.326840    3.635649    4.740325   25.406732   53.103896   \n",
            "std    133.938585   20.496317    4.593024    2.070909    7.780699    9.817534   \n",
            "min      1.000000  101.000000    0.000000    0.980000    6.740000   13.000000   \n",
            "25%    116.250000  124.000000    0.052500    3.282500   19.775000   47.000000   \n",
            "50%    231.500000  134.000000    2.000000    4.340000   26.115000   53.000000   \n",
            "75%    347.750000  148.000000    5.500000    5.790000   31.227500   60.000000   \n",
            "max    463.000000  218.000000   31.200000   15.330000   42.490000   78.000000   \n",
            "\n",
            "          obesity     alcohol         age         chd  \n",
            "count  462.000000  462.000000  462.000000  462.000000  \n",
            "mean    26.044113   17.044394   42.816017    0.346320  \n",
            "std      4.213680   24.481059   14.608956    0.476313  \n",
            "min     14.700000    0.000000   15.000000    0.000000  \n",
            "25%     22.985000    0.510000   31.000000    0.000000  \n",
            "50%     25.805000    7.510000   45.000000    0.000000  \n",
            "75%     28.497500   23.892500   55.000000    1.000000  \n",
            "max     46.580000  147.190000   64.000000    1.000000  \n",
            "0    65.367965\n",
            "1    34.632035\n",
            "Name: chd, dtype: float64\n",
            "row.names    0\n",
            "sbp          0\n",
            "tobacco      0\n",
            "ldl          0\n",
            "adiposity    0\n",
            "famhist      0\n",
            "typea        0\n",
            "obesity      0\n",
            "alcohol      0\n",
            "age          0\n",
            "chd          0\n",
            "dtype: int64\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fd1422fdb80>"
            ]
          },
          "metadata": {},
          "execution_count": 1
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 2"
      ],
      "metadata": {
        "id": "WwgGl9c9ic7P"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "\n",
        "# Load the data\n",
        "url = \"https://raw.githubusercontent.com/tofighi/MachineLearning/master/datasets/heart.csv\"\n",
        "heart_data = pd.read_csv(url)\n",
        "\n",
        "# Identify categorical variables\n",
        "categorical_cols = ['famhist']\n",
        "\n",
        "# Use one-hot encoding to convert categorical variables to binary\n",
        "heart_data = pd.get_dummies(heart_data, columns=categorical_cols)\n",
        "\n",
        "# View the first few rows of the data\n",
        "print(heart_data.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SKkW4GKJifRm",
        "outputId": "d7132028-1c39-4118-dae5-035a1facb383"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   row.names  sbp  tobacco   ldl  adiposity  typea  obesity  alcohol  age  \\\n",
            "0          1  160    12.00  5.73      23.11     49    25.30    97.20   52   \n",
            "1          2  144     0.01  4.41      28.61     55    28.87     2.06   63   \n",
            "2          3  118     0.08  3.48      32.28     52    29.14     3.81   46   \n",
            "3          4  170     7.50  6.41      38.03     51    31.99    24.26   58   \n",
            "4          5  134    13.60  3.50      27.78     60    25.99    57.34   49   \n",
            "\n",
            "   chd  famhist_Absent  famhist_Present  \n",
            "0    1               0                1  \n",
            "1    1               1                0  \n",
            "2    0               0                1  \n",
            "3    1               0                1  \n",
            "4    1               0                1  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The get_dummies() function creates new columns for each unique value of the categorical variable, and sets a value of 1 or 0 in each column depending on whether the original value matched that category. In this case, the 'famhist' column has been replaced by two new columns: 'famhist_Absent' and 'famhist_Present'."
      ],
      "metadata": {
        "id": "_X0Myj5MkquC"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 3"
      ],
      "metadata": {
        "id": "FW0AqiKykuNU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Import necessary libraries\n",
        "import pandas as pd\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "# Load the data\n",
        "url = \"https://raw.githubusercontent.com/tofighi/MachineLearning/master/datasets/heart.csv\"\n",
        "heart_data = pd.read_csv(url)\n",
        "\n",
        "# Separate categorical and non-categorical columns\n",
        "categorical_cols = ['famhist']\n",
        "non_categorical_cols = [col for col in heart_data.columns if col not in categorical_cols]\n",
        "\n",
        "# Standardize the non-categorical columns\n",
        "scaler = StandardScaler()\n",
        "heart_data[non_categorical_cols] = scaler.fit_transform(heart_data[non_categorical_cols])\n",
        "\n",
        "# View the first few rows of the data\n",
        "print(heart_data.head())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nNLpkx9skvtI",
        "outputId": "b15a5345-88c0-421e-f64f-baa0954df505"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   row.names       sbp   tobacco       ldl  adiposity  famhist     typea  \\\n",
            "0  -1.726055  1.058564  1.823073  0.478412  -0.295503  Present -0.418470   \n",
            "1  -1.718581  0.277089 -0.790237 -0.159680   0.412140   Absent  0.193344   \n",
            "2  -1.711107 -0.992806 -0.774980 -0.609245   0.884332  Present -0.112563   \n",
            "3  -1.703633  1.546985  0.842264  0.807126   1.624141  Present -0.214532   \n",
            "4  -1.696158 -0.211332  2.171805 -0.599577   0.305351  Present  0.703189   \n",
            "\n",
            "    obesity   alcohol       age       chd  \n",
            "0 -0.176786  3.277738  0.629336  1.373863  \n",
            "1  0.671373 -0.612745  1.383115  1.373863  \n",
            "2  0.735519 -0.541183  0.218184 -0.727875  \n",
            "3  1.412621  0.295062  1.040488  1.373863  \n",
            "4 -0.012856  1.647775  0.423760  1.373863  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 4"
      ],
      "metadata": {
        "id": "BtCJ0vA2lRfZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "\n",
        "def sigmoid(z):\n",
        "    \"\"\"\n",
        "    Compute the sigmoid of z.\n",
        "\n",
        "    Arguments:\n",
        "    z -- A scalar or numpy array of any size.\n",
        "\n",
        "    Return:\n",
        "    s -- sigmoid(z)\n",
        "    \"\"\"\n",
        "    s = 1 / (1 + np.exp(-z))\n",
        "    return s\n",
        "\n",
        "# Define coefficients and features\n",
        "theta = np.array([0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5])\n",
        "x = np.array([0.1, 0.2, 0.3, 0.4, 0, 1, 0.5, 0.6])\n",
        "\n",
        "# Compute the dot product of theta and x\n",
        "z = np.dot(theta, x)\n",
        "\n",
        "# Compute the sigmoid of z\n",
        "hypothesis = sigmoid(z)\n",
        "\n",
        "print(\"Hypothesis:\", hypothesis)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bIchrJx2lTAL",
        "outputId": "bcc3cdeb-0f29-4cd5-8aed-3ab655c1b4cd"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Hypothesis: 0.8249137318359602\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Defined $\\theta$ and $x$ as numpy arrays of length 8 (since there are 8 features in the heart disease dataset). We've then computed the dot product of $\\theta$ and $x$, and passed the result to the sigmoid function to compute the hypothesis (i.e., the probability that y=1, given x)."
      ],
      "metadata": {
        "id": "zHlZEE5amwDf"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 5"
      ],
      "metadata": {
        "id": "cA5eaX6VmznC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "# Load the heart disease dataset\n",
        "url = \"https://raw.githubusercontent.com/tofighi/MachineLearning/master/datasets/heart.csv\"\n",
        "df = pd.read_csv(url)\n",
        "\n",
        "# Encode the 'famhist' column\n",
        "df['famhist'] = pd.get_dummies(df['famhist'], drop_first=True)\n",
        "\n",
        "# Normalize the non-categorical columns\n",
        "for col in df.columns[:-1]:\n",
        "    df[col] = (df[col] - df[col].mean()) / df[col].std()\n",
        "\n",
        "# Define the sigmoid function\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "# Define the binary cross entropy loss function\n",
        "def binary_cross_entropy_loss(theta, X, y):\n",
        "    m = len(y)\n",
        "    h = sigmoid(X.dot(theta))\n",
        "    J = -(1/m) * np.sum(y * np.log(h) + (1 - y) * np.log(1 - h))\n",
        "    return J\n"
      ],
      "metadata": {
        "id": "ss1xx3rBm4FY"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "We define the sigmoid function using the formula sigmoid(z) = 1 / (1 + exp(-z)). This function takes a scalar or numpy array z as input and returns the corresponding output of the sigmoid function.\n",
        "\n",
        "We then define the binary cross entropy loss function using the formula J(θ) = − ∑i(y(i) log(hθ(x(i))) + (1 − y(i)) log(1 − hθ(x(i)))), where m is the number of training examples, X is the feature matrix, y is the label vector, and hθ(x) is the sigmoid function of the linear combination of the features and parameters. This function takes the parameter vector theta, the feature matrix X, and the label vector y as input, and returns the corresponding value of the binary cross entropy loss."
      ],
      "metadata": {
        "id": "T5-H7GyDouQW"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 6"
      ],
      "metadata": {
        "id": "eNu1vK00oykP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "\n",
        "# Load the heart disease dataset\n",
        "url = \"https://raw.githubusercontent.com/tofighi/MachineLearning/master/datasets/heart.csv\"\n",
        "df = pd.read_csv(url)\n",
        "\n",
        "def batch_gradient_descent(X, y, alpha=0.01, iterations=1000):\n",
        "    m = len(y)\n",
        "    n = X.shape[1]\n",
        "    thetas = np.zeros(n)\n",
        "    \n",
        "    for i in range(iterations):\n",
        "        z = np.dot(X, thetas)\n",
        "        h = 1 / (1 + np.exp(-z))\n",
        "        error = h - y\n",
        "        gradient = np.dot(X.T, error) / m\n",
        "        thetas -= alpha * gradient\n",
        "    \n",
        "    return thetas\n"
      ],
      "metadata": {
        "id": "vlh-1nv_o0Ph"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "In this code, X represents the feature matrix (with standardized values and the categorical variables one-hot encoded), y represents the target variable (coronary heart disease), alpha represents the learning rate (default value is 0.01), and iterations represents the number of iterations (default value is 1000).\n",
        "\n",
        "The function batch_gradient_descent performs batch gradient descent, which updates the weights (thetas) iteratively. In each iteration, the dot product of X and thetas is calculated and passed through the sigmoid function to get the predicted values h. The difference between the predicted values and the actual values (error) is then calculated. The gradient is the dot product of the transpose of X and error, divided by the number of samples m. Finally, the weights are updated by subtracting the product of alpha and the gradient from the previous weights. The updated weights are returned by the function."
      ],
      "metadata": {
        "id": "sSlZ-F1BpcjG"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 7"
      ],
      "metadata": {
        "id": "1Bc7njnUpfwz"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "# Load the dataset\n",
        "df = pd.read_csv(\"https://raw.githubusercontent.com/tofighi/MachineLearning/master/datasets/heart.csv\")\n",
        "\n",
        "# One-hot-encode the categorical variable\n",
        "df_encoded = pd.get_dummies(df, columns=[\"famhist\"])\n",
        "\n",
        "# Normalize the non-categorical columns\n",
        "non_cat_cols = [\"sbp\", \"tobacco\", \"ldl\", \"adiposity\", \"typea\", \"obesity\", \"alcohol\", \"age\"]\n",
        "df_encoded[non_cat_cols] = (df_encoded[non_cat_cols] - df_encoded[non_cat_cols].mean()) / df_encoded[non_cat_cols].std()\n",
        "\n",
        "# Split the data into features and label\n",
        "X = df_encoded.drop(\"chd\", axis=1)\n",
        "y = df_encoded[\"chd\"]\n",
        "\n",
        "# Randomly initialize theta coefficients\n",
        "np.random.seed(0)\n",
        "theta = np.random.rand(X.shape[1])\n",
        "\n",
        "# Define the sigmoid function\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "# Define the binary cross entropy loss function\n",
        "def cost_function(X, y, theta):\n",
        "    h = sigmoid(np.dot(X, theta))\n",
        "    cost = -np.sum(y * np.log(h) + (1 - y) * np.log(1 - h)) / y.size\n",
        "    return cost\n",
        "\n",
        "# Define the batch gradient descent function\n",
        "def batch_gradient_descent(X, y, alpha, epochs):\n",
        "    # Initialize theta coefficients randomly\n",
        "    np.random.seed(0)\n",
        "    theta = np.random.rand(X.shape[1])\n",
        "    \n",
        "    # Perform batch gradient descent for a given number of epochs\n",
        "    for epoch in range(epochs):\n",
        "        h = sigmoid(np.dot(X, theta))\n",
        "        gradient = np.dot(X.T, (h - y)) / y.size\n",
        "        theta -= alpha * gradient\n",
        "    \n",
        "    return theta\n",
        "\n",
        "# Set the hyperparameters\n",
        "alpha = 0.01\n",
        "epochs = 1000\n",
        "\n",
        "# Call the batch_gradient_descent function\n",
        "theta = batch_gradient_descent(X, y, alpha, epochs)\n",
        "\n",
        "# Print the final values of theta coefficients\n",
        "print(\"Final values of theta:\", theta)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bkGkseP9q--6",
        "outputId": "acbc1c23-63f1-428a-acff-b05b3706af64"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Final values of theta: [-1.43913024  1.43206561  1.8572319   1.61987385  1.37630717  1.10083669\n",
            "  0.75799673  1.04336835  2.47719849 -0.05124145  1.47844364]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 8"
      ],
      "metadata": {
        "id": "4AWCYPUuruWO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Load the dataset\n",
        "df = pd.read_csv(\"https://raw.githubusercontent.com/tofighi/MachineLearning/master/datasets/heart.csv\")\n",
        "\n",
        "# One-hot-encode the categorical variable\n",
        "df_encoded = pd.get_dummies(df, columns=[\"famhist\"])\n",
        "\n",
        "# Normalize the non-categorical columns\n",
        "non_cat_cols = [\"sbp\", \"tobacco\", \"ldl\", \"adiposity\", \"typea\", \"obesity\", \"alcohol\", \"age\"]\n",
        "df_encoded[non_cat_cols] = (df_encoded[non_cat_cols] - df_encoded[non_cat_cols].mean()) / df_encoded[non_cat_cols].std()\n",
        "\n",
        "# Split the data into features and label\n",
        "X = df_encoded.drop(\"chd\", axis=1)\n",
        "y = df_encoded[\"chd\"]\n",
        "\n",
        "# Randomly initialize theta coefficients\n",
        "np.random.seed(0)\n",
        "theta = np.random.rand(X.shape[1])\n",
        "\n",
        "# Define the sigmoid function\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "# Define the binary cross entropy loss function\n",
        "def cost_function(X, y, theta):\n",
        "    h = sigmoid(np.dot(X, theta))\n",
        "    cost = -np.sum(y * np.log(h) + (1 - y) * np.log(1 - h)) / y.size\n",
        "    return cost\n",
        "\n",
        "# Define the batch gradient descent function\n",
        "def batch_gradient_descent(X, y, alpha, epochs):\n",
        "    # Initialize theta coefficients randomly\n",
        "    np.random.seed(0)\n",
        "    theta = np.random.rand(X.shape[1])\n",
        "    \n",
        "    # Initialize arrays to store the cost and epoch values\n",
        "    cost_history = []\n",
        "    epoch_history = []\n",
        "    \n",
        "    # Perform batch gradient descent for a given number of epochs\n",
        "    for epoch in range(epochs):\n",
        "        h = sigmoid(np.dot(X, theta))\n",
        "        gradient = np.dot(X.T, (h - y)) / y.size\n",
        "        theta -= alpha * gradient\n",
        "        \n",
        "        # Compute the cost and append to the history arrays\n",
        "        cost = cost_function(X, y, theta)\n",
        "        cost_history.append(cost)\n",
        "        epoch_history.append(epoch)\n",
        "        \n",
        "    return theta, cost_history, epoch_history\n",
        "\n",
        "# Set the hyperparameters\n",
        "alpha_list = [0.001, 0.0001]\n",
        "epochs_list = [500, 1000, 10000]\n",
        "\n",
        "# Plot the learning curves for different learning rates and epochs\n",
        "for alpha in alpha_list:\n",
        "    for epochs in epochs_list:\n",
        "        # Call the batch_gradient_descent function\n",
        "        theta, cost_history, epoch_history = batch_gradient_descent(X, y, alpha, epochs)\n",
        "        \n",
        "        # Print the final cost and epoch values\n",
        "        print(f\"Learning rate: {alpha}, Epochs: {epochs}\")\n",
        "        print(f\"Final cost: {cost_history[-1]}\")\n",
        "        print(f\"Reasonable epoch to stop training: {epoch_history[-1]}\\n\")\n",
        "        \n",
        "        # Plot the learning curve\n",
        "        fig, ax = plt.subplots()\n",
        "        ax.plot(epoch_history, cost_history)\n",
        "        ax.set_xlabel(\"Epoch\")\n",
        "        ax.set_ylabel(\"Cost\")\n",
        "        ax.set_title(f\"Learning rate: {alpha}, Epochs: {epochs}\")\n",
        "        plt.show()\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "ncRHsuocrv5N",
        "outputId": "fdbd8742-a4cb-481f-fc7d-ee5f32020538"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-16-537b6cf2b4d9>:30: RuntimeWarning: divide by zero encountered in log\n",
            "  cost = -np.sum(y * np.log(h) + (1 - y) * np.log(1 - h)) / y.size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Learning rate: 0.001, Epochs: 500\n",
            "Final cost: 8.535934650648192\n",
            "Reasonable epoch to stop training: 499\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Learning rate: 0.001, Epochs: 1000\n",
            "Final cost: 4.285198156694152\n",
            "Reasonable epoch to stop training: 999\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Learning rate: 0.001, Epochs: 10000\n",
            "Final cost: 4.209423683915715\n",
            "Reasonable epoch to stop training: 9999\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Learning rate: 0.0001, Epochs: 500\n",
            "Final cost: 0.7205158107315323\n",
            "Reasonable epoch to stop training: 499\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Learning rate: 0.0001, Epochs: 1000\n",
            "Final cost: 0.7178982745854985\n",
            "Reasonable epoch to stop training: 999\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Learning rate: 0.0001, Epochs: 10000\n",
            "Final cost: 0.6749967804087388\n",
            "Reasonable epoch to stop training: 9999\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 9"
      ],
      "metadata": {
        "id": "MFt3JMp5vID4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Load the dataset\n",
        "df = pd.read_csv(\"https://raw.githubusercontent.com/tofighi/MachineLearning/master/datasets/heart.csv\")\n",
        "\n",
        "# One-hot-encode the categorical variable\n",
        "df_encoded = pd.get_dummies(df, columns=[\"famhist\"])\n",
        "\n",
        "# Normalize the non-categorical columns\n",
        "non_cat_cols = [\"sbp\", \"tobacco\", \"ldl\", \"adiposity\", \"typea\", \"obesity\", \"alcohol\", \"age\"]\n",
        "df_encoded[non_cat_cols] = (df_encoded[non_cat_cols] - df_encoded[non_cat_cols].mean()) / df_encoded[non_cat_cols].std()\n",
        "\n",
        "# Split the data into features and label\n",
        "X = df_encoded.drop(\"chd\", axis=1)\n",
        "y = df_encoded[\"chd\"]\n",
        "\n",
        "# Randomly initialize theta coefficients\n",
        "np.random.seed(0)\n",
        "theta = np.random.rand(X.shape[1])\n",
        "\n",
        "# Define the sigmoid function\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "# Define the binary cross entropy loss function\n",
        "def cost_function(X, y, theta):\n",
        "    h = sigmoid(np.dot(X, theta))\n",
        "    cost = -np.sum(y * np.log(h) + (1 - y) * np.log(1 - h)) / y.size\n",
        "    return cost\n",
        "\n",
        "# Define the mini-batch gradient descent function\n",
        "def mini_batch_gradient_descent(X, y, alpha, epochs, batch_size):\n",
        "    # Initialize theta coefficients randomly\n",
        "    np.random.seed(0)\n",
        "    theta = np.random.rand(X.shape[1])\n",
        "    \n",
        "    # Initialize arrays to store the cost and epoch values\n",
        "    cost_history = []\n",
        "    epoch_history = []\n",
        "    \n",
        "    # Perform mini-batch gradient descent for a given number of epochs\n",
        "    num_batches = X.shape[0] // batch_size\n",
        "    if X.shape[0] % batch_size != 0:\n",
        "        num_batches += 1\n",
        "    \n",
        "    for epoch in range(epochs):\n",
        "        for i in range(num_batches):\n",
        "            # Compute the start and end indices for the current batch\n",
        "            start_idx = i * batch_size\n",
        "            end_idx = start_idx + batch_size\n",
        "            if end_idx > X.shape[0]:\n",
        "                end_idx = X.shape[0]\n",
        "            \n",
        "            # Extract the current batch\n",
        "            X_batch = X.iloc[start_idx:end_idx, :]\n",
        "            y_batch = y.iloc[start_idx:end_idx]\n",
        "            \n",
        "            h = sigmoid(np.dot(X_batch, theta))\n",
        "            gradient = np.dot(X_batch.T, (h - y_batch)) / y_batch.size\n",
        "            theta -= alpha * gradient\n",
        "        \n",
        "        # Compute the cost and append to the history arrays\n",
        "        cost = cost_function(X, y, theta)\n",
        "        cost_history.append(cost)\n",
        "        epoch_history.append(epoch)\n",
        "        \n",
        "    return theta, cost_history, epoch_history\n",
        "\n",
        "# Set the hyperparameters\n",
        "alpha_list = [0.001, 0.0001]\n",
        "epochs_list = [500, 1000, 10000]\n",
        "batch_size = 50\n",
        "\n",
        "# Plot the learning curves for different learning rates and epochs\n",
        "for alpha in alpha_list:\n",
        "    for epochs in epochs_list:\n",
        "        # Call the mini_batch_gradient_descent function\n",
        "        theta, cost_history, epoch_history = mini_batch_gradient_descent(X, y, alpha, epochs, batch_size)\n",
        "        \n",
        "        # Print the final cost and epoch values\n",
        "        print(f\"Learning rate: {alpha}, Epochs: {epochs}\")\n",
        "        print(f\"Final cost: {cost_history[-1]}\")\n",
        "        print(f\"Reasonable epoch to stop training: {epoch_history[-1]}\\n\")\n",
        "        \n",
        "        # Plot the learning curve\n",
        "        fig, ax = plt.subplots()\n",
        "        ax.plot(epoch_history, cost_history)\n",
        "        ax.set_xlabel(\"Epoch\")\n",
        "        ax.set_ylabel(\"Cost\")\n",
        "        ax.set_title(f\"Learning rate: {alpha}, Epochs: {epochs}\")\n",
        "        plt.show()\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "j6IbYn26zg0U",
        "outputId": "2abf11c1-3f62-4163-9f50-12acfacf1460"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-21-f68f2292d135>:30: RuntimeWarning: divide by zero encountered in log\n",
            "  cost = -np.sum(y * np.log(h) + (1 - y) * np.log(1 - h)) / y.size\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Learning rate: 0.001, Epochs: 500\n",
            "Final cost: inf\n",
            "Reasonable epoch to stop training: 499\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Learning rate: 0.001, Epochs: 1000\n",
            "Final cost: inf\n",
            "Reasonable epoch to stop training: 999\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Learning rate: 0.001, Epochs: 10000\n",
            "Final cost: inf\n",
            "Reasonable epoch to stop training: 9999\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Learning rate: 0.0001, Epochs: 500\n",
            "Final cost: 0.9113683630770958\n",
            "Reasonable epoch to stop training: 499\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Learning rate: 0.0001, Epochs: 1000\n",
            "Final cost: 0.8870862730380679\n",
            "Reasonable epoch to stop training: 999\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Learning rate: 0.0001, Epochs: 10000\n",
            "Final cost: 1.1413239508582818\n",
            "Reasonable epoch to stop training: 9999\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question 10"
      ],
      "metadata": {
        "id": "qQyEZKtL3RVT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "\n",
        "# Load the dataset\n",
        "df = pd.read_csv(\"https://raw.githubusercontent.com/tofighi/MachineLearning/master/datasets/heart.csv\")\n",
        "\n",
        "# One-hot-encode the categorical variable\n",
        "df_encoded = pd.get_dummies(df, columns=[\"famhist\"])\n",
        "\n",
        "# Normalize the non-categorical columns\n",
        "non_cat_cols = [\"sbp\", \"tobacco\", \"ldl\", \"adiposity\", \"typea\", \"obesity\", \"alcohol\", \"age\"]\n",
        "df_encoded[non_cat_cols] = (df_encoded[non_cat_cols] - df_encoded[non_cat_cols].mean()) / df_encoded[non_cat_cols].std()\n",
        "\n",
        "# Split the data into features and label\n",
        "X = df_encoded.drop(\"chd\", axis=1)\n",
        "y = df_encoded[\"chd\"]\n",
        "\n",
        "# Fit the logistic regression model using scikit-learn\n",
        "lr = LogisticRegression()\n",
        "lr.fit(X, y)\n",
        "\n",
        "# Print the coefficient estimates\n",
        "print(lr.intercept_)\n",
        "print(lr.coef_)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jibaV-UL3TMU",
        "outputId": "00107edc-8c3a-48c2-a9c6-ba30c9832e15"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[-0.39786754]\n",
            "[[-0.00090237  0.15363871  0.359036    0.34557268  0.16375387  0.35991075\n",
            "  -0.26692462  0.01018533  0.63070811 -0.64409054  0.27006535]]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.8/dist-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "  n_iter_i = _check_optimize_result(\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The output of this code will be the intercept and coefficient estimates for the logistic regression model fit by scikit-learn's LogisticRegression class. We can compare these estimates with the coefficients obtained from the mini-batch gradient descent implementation in the previous code."
      ],
      "metadata": {
        "id": "Rrn7nX5l4jPi"
      }
    }
  ]
}
